(
  pips: {},
  words: {},
  enums: {
    "CHIP.SPEED": (
      options: {
        "FAST_1V0": [(frame:0,bit:3,invert:false,),(frame:0,bit:4,invert:true,),(frame:0,bit:5,invert:true,),(frame:1,bit:3,invert:false,),(frame:1,bit:4,invert:true,),(frame:1,bit:5,invert:true,),(frame:2,bit:3,invert:false,),(frame:2,bit:4,invert:true,),(frame:2,bit:5,invert:true,),(frame:3,bit:3,invert:false,),(frame:3,bit:4,invert:true,),(frame:3,bit:5,invert:true,),(frame:4,bit:3,invert:false,),(frame:4,bit:4,invert:true,),(frame:4,bit:5,invert:true,),(frame:5,bit:3,invert:false,),(frame:5,bit:4,invert:true,),(frame:5,bit:5,invert:true,),(frame:6,bit:3,invert:false,),(frame:6,bit:4,invert:true,),(frame:6,bit:5,invert:true,),(frame:7,bit:3,invert:false,),(frame:7,bit:4,invert:true,),(frame:7,bit:5,invert:true,),(frame:8,bit:3,invert:false,),(frame:8,bit:4,invert:true,),(frame:8,bit:5,invert:true,),(frame:9,bit:3,invert:false,),(frame:9,bit:4,invert:true,),(frame:9,bit:5,invert:true,),(frame:10,bit:3,invert:false,),(frame:10,bit:4,invert:true,),(frame:10,bit:5,invert:true,),(frame:11,bit:2,invert:false,),(frame:11,bit:3,invert:false,),(frame:11,bit:4,invert:true,),(frame:11,bit:5,invert:true,),(frame:12,bit:2,invert:false,),(frame:12,bit:3,invert:false,),(frame:12,bit:4,invert:true,),(frame:12,bit:5,invert:true,),(frame:13,bit:2,invert:false,),(frame:13,bit:3,invert:false,),(frame:13,bit:4,invert:true,),(frame:13,bit:5,invert:true,),(frame:14,bit:2,invert:false,),(frame:14,bit:3,invert:false,),(frame:14,bit:4,invert:true,),(frame:14,bit:5,invert:true,),(frame:15,bit:2,invert:false,),(frame:15,bit:3,invert:false,),(frame:15,bit:4,invert:true,),(frame:15,bit:5,invert:true,),],
        "SLOW_1V0": [(frame:0,bit:3,invert:true,),(frame:0,bit:4,invert:false,),(frame:0,bit:5,invert:false,),(frame:1,bit:3,invert:true,),(frame:1,bit:4,invert:false,),(frame:1,bit:5,invert:false,),(frame:2,bit:3,invert:true,),(frame:2,bit:4,invert:false,),(frame:2,bit:5,invert:false,),(frame:3,bit:3,invert:true,),(frame:3,bit:4,invert:false,),(frame:3,bit:5,invert:false,),(frame:4,bit:3,invert:true,),(frame:4,bit:4,invert:false,),(frame:4,bit:5,invert:false,),(frame:5,bit:3,invert:true,),(frame:5,bit:4,invert:false,),(frame:5,bit:5,invert:false,),(frame:6,bit:3,invert:true,),(frame:6,bit:4,invert:false,),(frame:6,bit:5,invert:false,),(frame:7,bit:3,invert:true,),(frame:7,bit:4,invert:false,),(frame:7,bit:5,invert:false,),(frame:8,bit:3,invert:true,),(frame:8,bit:4,invert:false,),(frame:8,bit:5,invert:false,),(frame:9,bit:3,invert:true,),(frame:9,bit:4,invert:false,),(frame:9,bit:5,invert:false,),(frame:10,bit:3,invert:true,),(frame:10,bit:4,invert:false,),(frame:10,bit:5,invert:false,),(frame:11,bit:2,invert:true,),(frame:11,bit:3,invert:true,),(frame:11,bit:4,invert:false,),(frame:11,bit:5,invert:false,),(frame:12,bit:2,invert:true,),(frame:12,bit:3,invert:true,),(frame:12,bit:4,invert:false,),(frame:12,bit:5,invert:false,),(frame:13,bit:2,invert:true,),(frame:13,bit:3,invert:true,),(frame:13,bit:4,invert:false,),(frame:13,bit:5,invert:false,),(frame:14,bit:2,invert:true,),(frame:14,bit:3,invert:true,),(frame:14,bit:4,invert:false,),(frame:14,bit:5,invert:false,),(frame:15,bit:2,invert:true,),(frame:15,bit:3,invert:true,),(frame:15,bit:4,invert:false,),(frame:15,bit:5,invert:false,),],
      },
      desc: "Adjust back bias for high speed or low power",
    ),
  },
  conns: {},
)